Linux is an open source os unix based on the linux kernel.

Open Source means that the code used to create free and available to the public to view edit and even contribute to its development. Developed by Linus Torvalds in 1991.

Linux component:
Bootloader: defined as the software that manages the boot process of a computer.
Kernel: core of the system that manages the CPU, memory and peripheral devices.

Init system: always executed by the Linux kernel after the early stages of boot up completion by the bootloader, it starts all the necessary daemons and background processes required to make the operating system work background processes required to make the os work.

Daemons: background services that either start up during boot or after logging in. It manages many parts of your system, such as logging information, watching for devices inserted or removed, managing user login.

Graphical Server: subsystem that displays the graphics on the monitor.

Desktop environment: users interaction and includes built-in apps.

Applications: High-quality software apps can be easily found using markets(App store, google play) to simplify application installation.

Distributions:
Ubuntu, Debian, CentOS, Fedora, Linux Mint, OpenSUSE, Archlinux, Elementary OS.

Linux Role in DevOps: deliver software at a faster pace(building on existing infrastructure) and it's open source which makes it customizable for DevOps and flexible

Linux commands:
whoami: displays username
id: returns user identity
hostname: prints the name of the current user hostname
uname: prints basic info about the operating system name and system hardrive
passwd: change the password
pwd: to get the working directory
cd: change directory(to navigate between directories)
ls: list
mkdir: make directory
rm -rf: remove by force
hello > new.txt: adds a new file named new.txt and written inside it hello
cp file/ path
mv file/ path
locate filename: shows the path of the file name
grep: filters
ifconfig: shows network interface details
netstat: shows network status and ports
ip a: shows the network details
ss: investigate sockets
ps: shows process status
who: displays who logged in
env: prints environment or sets and executes
lsblk: List block devices
lsusb: List usb devices
lsof: Lists opened files
lspci: List pci devices
mv: to move file
mv current_name rename_with: to rename a file
tree: shows the subchild of the current directory
cp: to copy a file into a destinated directory 
which: returns the path or file that should be executed
find: to find files and folders also filter
cat: show file content
sudo: super user do
su: switch user
useradd: create new user
userdel: delete user
addgroup: add new group to the system
delgroup: delete group from the system
systemd: create a scheduled process
wget: alternate tool to transfer files from protocol

System control:
systemctl start <service_name> #start service
systemctl stop <service_name> #stop service
systemctl restart <service_name>#restart
systemctl reload <service_name>#reload
systemctl enable <service_name>#enable
systemctl disable <service_name>#disable
systemctl status <service_name> #show status
systemctl poweroff    # Shutdown the system
systemctl reboot      # Reboot the system
systemctl suspend     # Suspend the system
systemctl hibernate   # Hibernate the system

Network commands:
ifconfig is used to display the parameters of wired connection interface
iwconfig is used to display the parameters of wireless connection interface
ip a(address) is used to display the system's IP networking information 
ip n(neighbour) is used to display the neighbour hosts on the network
ip r(routing) is used to display routing table showing the route packets your network will take


command -v #to check the destination of files
etc where the configuration files are located
lsof -i  :80 #to check the running protocols and services on port 80
systemctl list-units --type=service --state=running #to search for services
sudo nano /etc/systemd/system/prometheus.service #for creating shortcut prometheus service
vim sites-enabled/000-default.conf #to change ports for apache2
curl ipconfig.co #to get the current ip of the service

sudo fdisk -l //to check the /dev/... running
mount /dev/... media/usb_driver //To access a usb
to create an app.AppImage as desktop application
existing application can be found and editable through:
cp /usr/share/applications/teams-for-linux.desktop ~/.local/share/applications/teams.desktop
To create commands
─(louay㉿kali)-[/usr/local/bin]
└─$ cat xampp_start 
#!/bin/bash
cd /opt/lampp
sudo ./lampp start

Start bleutooth:
┌──(louay㉿kali)-[~]
└─$ sudo systemctl start bluetooth

#add username:
sudo adduser <username> #adds user
sudo id <username> #shows user info
sudo passwd <username> #add password for the user
echo $USER #shows the current user
usermod -aG sudo <username> #add username to sudoers list
ssh-copy-id ssh -p username #to add to the known-hosts list


To create an .AppImage or .desktop as an application
in the ~/.local/share/applications create <name>.desktop
┌──(louay㉿kali)-[~/.local/share/applications]
└─$ cat arduino-ide.desktop 
[Desktop Entry]
Type=Application
Name=Arduino IDE
Exec=/etc/arduino/arduino-ide_2.3.2_Linux_64bit.AppImage
Icon=/etc/arduino/arduino_103028.png
Terminal=false
Categories=Development;



To access .exe through wine:
WINEPREFIX=~/wineprefix wine /media/lserhal/16.0.15330.20266/OInstall.exe

To create a cronjob(Task schedule): 
crontab -e

* * * * * command_to_execute
- - - - -
| | | | |
| | | | +---- Day of the week (0 - 7) (Sunday is 0 or 7)
| | | +------ Month (1 - 12)
| | +-------- Day of the month (1 - 31)
| +---------- Hour (0 - 23)
+------------ Minute (0 - 59)
example:
0 9 * * * /home/lserhal/scripts/Anydesk-crack.sh

To check disk:
sudo fdisk -l

To check RAM:
top

to check services:
systemctl list-units --type=service
systemctl list-units --type=service --all
service --status-all
systemctl status <service-name>
systemctl list-units --type=service | grep <service-name>



to check drivers:
lscpi

to check usb /dev/sda:
sudo fdisk -l


to check packages:
dpkg -l | grep <package-name>

to install mysql go to mysql-dep and install package
sudo get-apt install mysql-server
			  -community-server
			  -community-core-server


to install composer:
sudo apt install php php-cli php-mbstring unzip curl -y
curl -sS https://getcomposer.org/installer | php
sudo mv composer.phar /usr/local/bin/composer
composer --version

to install postman:
https://dl.pstmn.io/download/latest/linux_64
tar -xvzf postman.tar.gz
sudo mv Postman /opt/postman
sudo ln -s /opt/postman/Postman /usr/bin/postman
postman

to create icon desktop:
sudo nano /usr/share/applications/postman.desktop

[Desktop Entry]
Name=Postman
Exec=/opt/postman/Postman
Icon=/opt/postman/app/resources/app/assets/icon.png
Type=Application
Categories=Development;

to install buds manager:
flatpak install flathub me.timschneeberger.GalaxyBudsClient

to access buds manager:
flatpak run me.timschneeberger.GalaxyBudsClient

install flathub:
sudo apt install flatpak
sudo apt install gnome-software-plugin-flatpak
flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
reboot

to renew gpg trusted key in kali:
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ED444FF07D8D0BF6

nmtui // works as netplan to assign ip address

sudo fdisk -l: shows disks partitions

sudo mount /dev/{sbd1} /mount/usb : mount usb