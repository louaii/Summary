Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently.

Terraform can manage existing and popular service providers as well as custom in-house solutions.

Configuration files described to Terraform, the components needed to run a single application or your entire data center.

Terraform generates an execution plan describing what it will do to reach the desired state and then executes it to build the described infrastructure

_Key features of Terraform:
.Infrastructure as Code: Uses high-level configuration syntax and allows a blueprint of the datacenter, also infrastructure can be shared and reused. As the configuration changes, Terraform is able to determine what changed and create incremental execution plans, which can be applied. The infrastructure Terraform can manage low-level components, such as compute instances, storage, and networking as well as high-level components, such as DNS entries, SaaS features

.Execution plans: Terraform has a planning step where it generates an execution plan. The execution plan shows what Terraform will do when you can apply. This lets you avoid any surprises when Terraform manipulates infrastructure.

.Resource graph: Terraform builds a graph of all your resources and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.

.Change automation: Complex change sets can be applied to your infrastructure with minimal human interaction, with the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order avoiding many possible human errors.
