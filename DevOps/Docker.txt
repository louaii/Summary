Docker is an open-source standalone application which works as an engine to run containerized application isolated from others. Docker can be defined as container management service.

Container is a standard unit of software that packages up code and all its dependencies so the application runs quickly from a computing environment to another, it packages applications as images to run them.

Virtualization allows using physical resources into many environments using hypervisors also known as virtual machine monitor(VMM), separate the physical resources from virtual enviroments.

	----------------			-----     -----     -----             -------------------
       |                |	               | App |   | App |   | App |           |   Containarized   |
       |  Applications  |                       -----     -----     -----             -------------------
       |________________|                      | OS  |   | OS  |   | OS  |           | A | B | C | D | E |
       |                |                       -----     -----     -----             -------------------
       | Operating      |                      |	Virualization    |           |       Docker      |
       |      Systems   |                       -------------------------             -------------------
       |________________|                      |       Hardware          |           |         OS        |
       |    Hardware    |                       -------------------------             -------------------
       |                |                                                            |      Hardware     |
        ----------------                                                              -------------------
    Traditional (server,laptop)




.Docker Architecture:
---------------------
Docker Image: read-only template with instructions for creating a Docker container
Docker Container: runnable instance of image
Docker Registry: stores Docker images, DockerHub is a public registry
Docker Client: using commands, client sends these commands to dockerd which carries them out. Docker commands use docker API
Docker daemon: listens for Docker API requests and manages Docker objects such as images, containers, networks, volumes
Docker Namespaces: used to provide isolated workspace(container), when running the container Docker creates a set of namespaces for that container. These name spaces provide a layer of isolation. Each aspect of a container runs in a separate namespace and its access is limited to that namespace.







        Client                                       Docker-Host                               Registry
 --------------------                          -------------------------                    -------------
|                    |                        |                         |                  | {DockerHub} |
| docker build-------|------------------------|------{docker daemon}    |                  |    ubuntu   |
| docker pull--------|---------------------/  | images /       container|         ---------|    image    |
| docker run---------|--------------------/   |  |debian|---------|a|   |         |          -------------
|  (commands)        |                        |  |ubuntu|         |b|   |         |
|                    |                        |      \__________________|----------         
 --------------------                          -------------------------



.Docker Commands:
-----------------
docker run <image> //to run a docker image installed and if not installed this command will search for the image, pull it then run it
docker ps -a | -all//to check all the containers
docker ps // to check the running containers
docker container ls -a //works same as docker ps -a
docker pull <image> // to pull a new image which isn't installed locally
docker rm <container_id> // to delete container
docker image rm <image_name> // to delete image
docker image rm <image_id> //to delete image

